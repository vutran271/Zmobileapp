{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vutra\\\\source\\\\repos\\\\zenmobileapp\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { WebView } from \"./node_modules/react-native-webview\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport bgImg from \"./assets/background.jpg\";\nimport * as ImagePicker from \"./node_modules/expo-image-picker\";\nimport { Test } from \"./src/components/Test/Test\";\nimport logo from \"./assets/zenLogo.jpeg\";\nimport { Ionicons, FontAwesome5 } from '@expo/vector-icons';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.op = function _callee() {\n      var permission, pickerResult;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.getCameraPermissionsAsync());\n\n            case 2:\n              permission = _context.sent;\n\n              if (!(permission.granted === false)) {\n                _context.next = 6;\n                break;\n              }\n\n              alert(\"Permission to access camera roll is required!\");\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n            case 8:\n              pickerResult = _context.sent;\n              console.log(pickerResult);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      count: 0,\n      site: \"https://zenspanail.com\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"increaseCount\",\n    value: function increaseCount() {\n      this.setState({\n        count: this.state.count += 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var WebViewRef;\n      return React.createElement(SafeAreaView, {\n        style: {\n          backgroundColor: \"green\",\n          flex: 1,\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, React.createElement(WebView, {\n        source: {\n          uri: this.state.site\n        },\n        injectedJavaScript: \"()=>{alert('work')}\",\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }\n      }), React.createElement(View, {\n        style: styles.menu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }\n      }, React.createElement(TouchableOpacity, {\n        onpress: function onpress() {\n          WebViewRef && WebViewRef.reload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      }, React.createElement(Image, {\n        source: logo,\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }\n      })), React.createElement(FontAwesome5, {\n        name: \"user-circle\",\n        size: 35,\n        color: \"#80a831\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.increaseCount.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }\n      }, \" Press me an see. \", this.state.count))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  logo: {\n    width: 80,\n    height: 60,\n    alignSelf: \"flex-start\"\n  },\n  container: {\n    flex: 1\n  },\n  menu: {\n    flex: 0.1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    backgroundColor: \"white\",\n    shadowColor: \"black\",\n    height: 120,\n    shadowOffset: {\n      width: 2,\n      height: 3\n    },\n    alignItems: \"center\",\n    shadowOpacity: 5,\n    shadowRadius: 10,\n    paddingRight: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Vutra/source/repos/zenmobileapp/App.js"],"names":["StatusBar","React","WebView","bgImg","ImagePicker","Test","logo","Ionicons","FontAwesome5","App","props","op","getCameraPermissionsAsync","permission","granted","alert","launchImageLibraryAsync","pickerResult","console","log","state","count","site","setState","WebViewRef","backgroundColor","flex","flexDirection","uri","styles","container","menu","reload","increaseCount","bind","Component","StyleSheet","create","width","height","alignSelf","flexWrap","justifyContent","shadowColor","shadowOffset","alignItems","shadowOpacity","shadowRadius","paddingRight"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { WebView } from \"./node_modules/react-native-webview\";\r\nimport {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Button,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport bgImg from \"./assets/background.jpg\";\r\nimport * as ImagePicker from \"./node_modules/expo-image-picker\";\r\nimport { Test } from \"./src/components/Test/Test\";\r\nimport logo from \"./assets/zenLogo.jpeg\";\r\nimport { Ionicons , FontAwesome5 } from '@expo/vector-icons';\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state  = {\r\n      count : 0,\r\n      site : \"https://zenspanail.com\"\r\n    }\r\n  }\r\n  op = async () => {\r\n    let permission = await ImagePicker.getCameraPermissionsAsync();\r\n    if (permission.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    console.log(pickerResult);\r\n  };\r\n\r\n  increaseCount() {\r\n    this.setState( {count: this.state.count += 1})\r\n }\r\n\r\n\r\n  render(){\r\n    let WebViewRef;\r\n    return (\r\n      <SafeAreaView style={{backgroundColor:\"green\", flex:1,flexDirection:\"column\"}}>\r\n           <WebView\r\n           source={{ uri: this.state.site }}\r\n           injectedJavaScript={ \"()=>{alert('work')}\"}\r\n             style={styles.container}\r\n           >\r\n           </WebView>\r\n           <View style={styles.menu}>\r\n             <TouchableOpacity onpress={() => { WebViewRef && WebViewRef.reload()}} >\r\n               <Image source={logo} style={styles.logo}></Image>\r\n             </TouchableOpacity>\r\n             <FontAwesome5 name=\"user-circle\" size={35} color=\"#80a831\" /> \r\n             {/* <Ionicons name=\"md-checkmark-circle\" size={35} color=\"#80a831\" />  */}\r\n             <TouchableOpacity onPress = { this.increaseCount.bind(this)}>\r\n               <Text> Press me an see. {this.state.count}</Text>\r\n             </TouchableOpacity>\r\n           </View>\r\n       </SafeAreaView>\r\n       );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  logo: {\r\n    width: 80,\r\n    height: 60,\r\n    alignSelf:\"flex-start\"\r\n  },\r\n  container: {\r\n    flex:1,\r\n  },\r\n  menu:{\r\n    flex:0.1,\r\n    flexWrap:\"wrap\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-around\",\r\n    backgroundColor:\"white\",\r\n    shadowColor:\"black\",\r\n    height:120,\r\n    shadowOffset:{\r\n      width:2,\r\n      height:3,\r\n    },\r\n    alignItems:\"center\",\r\n    shadowOpacity:5,\r\n    shadowRadius:10,\r\n    paddingRight:10,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}