{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vutra\\\\source\\\\repos\\\\zenmobileapp\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { WebView } from \"./node_modules/react-native-webview\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport bgImg from \"./assets/background.jpg\";\nimport * as ImagePicker from \"./node_modules/expo-image-picker\";\nimport logo from \"./assets/zenLogo.jpeg\";\nexport default function App() {\n  var op = function op() {\n    var permission, pickerResult;\n    return _regeneratorRuntime.async(function op$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.getCameraPermissionsAsync());\n\n          case 2:\n            permission = _context.sent;\n\n            if (!(permission.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n            console.log(pickerResult);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var reloadPage = function reloadPage() {};\n\n  console.log(\"lala\");\n  return React.createElement(WebView, {\n    source: {\n      uri: url\n    },\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.LogoContainter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: reloadPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  LogoContainter: {\n    flex: 1,\n    height: 200,\n    alignSelf: \"flex-start\"\n  },\n  logo: {\n    width: 110,\n    height: 60,\n    marginTop: 8\n  },\n  container: {\n    marginTop: 20,\n    flex: 1,\n    backgroundColor: \"pink\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Vutra/source/repos/zenmobileapp/App.js"],"names":["StatusBar","React","WebView","bgImg","ImagePicker","logo","App","op","getCameraPermissionsAsync","permission","granted","alert","launchImageLibraryAsync","pickerResult","console","log","reloadPage","uri","url","styles","container","LogoContainter","StyleSheet","create","flex","height","alignSelf","width","marginTop","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT;;;;;;;;AAUA,OAAOC,KAAP;AACA,OAAO,KAAKC,WAAZ;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAIC,EAAE,GAAG,SAALA,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACgBH,WAAW,CAACI,yBAAZ,EADhB;;AAAA;AACHC,YAAAA,UADG;;AAAA,kBAEHA,UAAU,CAACC,OAAX,KAAuB,KAFpB;AAAA;AAAA;AAAA;;AAGLC,YAAAA,KAAK,CAAC,+CAAD,CAAL;AAHK;;AAAA;AAAA;AAAA,6CAMkBP,WAAW,CAACQ,uBAAZ,EANlB;;AAAA;AAMHC,YAAAA,YANG;AAOPC,YAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAT;;AAUA,MAAIG,UAAU,GAAG,SAAbA,UAAa,GAAM,CACtB,CADD;;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SACE,oBAAC,OAAD;AACE,IAAA,MAAM,EAAE;AAAEE,MAAAA,GAAG,EAAEC;AAAP,KADV;AAEE,IAAA,KAAK,EAAEC,MAAM,CAACC,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAGL,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEX,IAAf;AAAqB,IAAA,KAAK,EAAEc,MAAM,CAACd,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAJF,CADF;AAYD;AAED,IAAMc,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,cAAc,EAAE;AACdG,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,MAAM,EAAE,GAFM;AAGdC,IAAAA,SAAS,EAAC;AAHI,GADe;AAM/BrB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,KAAK,EAAE,GADH;AAEJF,IAAAA,MAAM,EAAE,EAFJ;AAGJG,IAAAA,SAAS,EAAC;AAHN,GANyB;AAW/BR,EAAAA,SAAS,EAAE;AACTQ,IAAAA,SAAS,EAAE,EADF;AAETJ,IAAAA,IAAI,EAAE,CAFG;AAGTK,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP;AAXoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { WebView } from \"./node_modules/react-native-webview\";\r\nimport {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport bgImg from \"./assets/background.jpg\";\r\nimport * as ImagePicker from \"./node_modules/expo-image-picker\";\r\nimport logo from \"./assets/zenLogo.jpeg\";\r\n\r\nexport default function App() {\r\n  \r\n  let op = async () => {\r\n    let permission = await ImagePicker.getCameraPermissionsAsync();\r\n    if (permission.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    console.log(pickerResult);\r\n  };\r\n\r\n  let reloadPage = () => {\r\n  }\r\n  console.log(\"lala\");\r\n  return (\r\n    <WebView\r\n      source={{ uri: url }}\r\n      style={styles.container}\r\n    >\r\n      <View style={styles.LogoContainter}>\r\n        <TouchableOpacity onPress={ reloadPage } >\r\n          <Image source={logo} style={styles.logo}></Image>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </WebView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  LogoContainter: {\r\n    flex: 1,\r\n    height: 200,\r\n    alignSelf:\"flex-start\"\r\n  },\r\n  logo: {\r\n    width: 110,\r\n    height: 60,\r\n    marginTop:8,\r\n  },\r\n  container: {\r\n    marginTop: 20,\r\n    flex: 1,\r\n    backgroundColor: \"pink\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}